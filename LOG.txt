TRACE [main] [c.d.d.Dag] onDagCreated Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=0, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-root, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=1, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-final, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=2, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-s1, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=3, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-s2, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=4, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-s3, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=5, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-s4, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=6, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-s5, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=7, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-s6, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=8, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-i1, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=9, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagNodeAdded: node=DagNode[node-i2, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=0]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-root, CREATED], to=DagNode[node-s1, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=1]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-root, CREATED], to=DagNode[node-i1, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=2]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-s1, CREATED], to=DagNode[node-s2, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=3]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-s1, CREATED], to=DagNode[node-s3, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=4]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-i1, CREATED], to=DagNode[node-s4, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=5]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-i1, CREATED], to=DagNode[node-i2, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=6]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-s3, CREATED], to=DagNode[node-s5, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=7]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-s4, CREATED], to=DagNode[node-s5, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=8]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-s2, CREATED], to=DagNode[node-s6, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=9]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-s5, CREATED], to=DagNode[node-s6, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=10]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-i2, CREATED], to=DagNode[node-s6, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=11]
TRACE [main] [c.d.d.Dag] onDagEdgeAdded: from=DagNode[node-s6, CREATED], to=DagNode[node-final, CREATED], graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=12]
INFO  [main] [c.d.d.DagScheduler] DagScheduler start with input=你好，这是一条由RootStrategy生成的测试语句 to graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=12]
TRACE [main] [c.d.d.Dag] onDagPrepared Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=12]
TRACE [main] [c.d.d.Dag] Node[node-root] state changed: CREATED -> PREPARED
TRACE [main] [c.d.d.Dag] onDagScheduling Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=12]
TRACE [main] [c.d.d.Dag] Node[node-i1] state changed: CREATED -> PREPARED
TRACE [main] [c.d.d.Dag] Node[node-s1] state changed: CREATED -> PREPARED
TRACE [main] [c.d.d.Dag] Node[node-s4] state changed: CREATED -> PREPARED
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-root] state changed: PREPARED -> START
TRACE [main] [c.d.d.Dag] Node[node-s2] state changed: CREATED -> PREPARED
TRACE [main] [c.d.d.Dag] Node[node-s3] state changed: CREATED -> PREPARED
TRACE [main] [c.d.d.Dag] Node[node-i2] state changed: CREATED -> PREPARED
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-root, START], param depend expect=0, actual=1
TRACE [main] [c.d.d.Dag] Node[node-s5] state changed: CREATED -> PREPARED
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-root] state changed: START -> RUNNING
TRACE [pool-2-thread-2] [c.d.d.Dag] Node[node-i1] state changed: PREPARED -> START
TRACE [pool-2-thread-3] [c.d.d.Dag] Node[node-s1] state changed: PREPARED -> START
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-i1, START], param depend expect=1, actual=0
TRACE [main] [c.d.d.Dag] Node[node-s6] state changed: CREATED -> PREPARED
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s1, START], param depend expect=1, actual=0
TRACE [pool-2-thread-4] [c.d.d.Dag] Node[node-s4] state changed: PREPARED -> START
DEBUG [pool-2-thread-1] [c.d.s.StrategyBean] RootStrategy[root:ROOT] execute: params=[你好，这是一条由RootStrategy生成的测试语句]
TRACE [pool-2-thread-2] [c.d.d.Dag] Node[node-i1] state changed: START -> WAITING
TRACE [pool-2-thread-5] [c.d.d.Dag] Node[node-s2] state changed: PREPARED -> START
TRACE [pool-2-thread-3] [c.d.d.Dag] Node[node-s1] state changed: START -> WAITING
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-s4, START], param depend expect=1, actual=0
TRACE [main] [c.d.d.Dag] Node[node-final] state changed: CREATED -> PREPARED
TRACE [pool-2-thread-4] [c.d.d.Dag] Node[node-s4] state changed: START -> WAITING
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, START], param depend expect=1, actual=0
DEBUG [pool-2-thread-1] [c.d.s.StrategyBean] RootStrategy[root:ROOT] do [你好，这是一条由RootStrategy生成的测试语句] to: 你好，这是一条由RootStrategy生成的测试语句
TRACE [pool-2-thread-5] [c.d.d.Dag] Node[node-s2] state changed: START -> WAITING
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-root] state changed: RUNNING -> SUCCESS
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s1, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-i1, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Node executed done, begin delivering result[DagNodeExecuteResult(result=你好，这是一条由RootStrategy生成的测试语句, info=DagNodeInfo[8fce0232c3b24b768951df26351e3d79:node-root,timeout=-1], trace=TraceInfo[waitingT=0,ineffectiveT=0,timeoutT=0,startT=1638704310668,runningT=1638704310669,failedT=0,preparedT=1638704310654,successT=1638704310670,createdT=1638704310643,state=SUCCESS,failedDepends=[]], throwable=null)] to 2 children
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Delivering node[node-root] result to child DagNode[node-i1, WAITING]
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-i1, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Delivering node[node-root] result to child DagNode[node-s1, WAITING]
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s1, WAITING], param depend expect=1, actual=1
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-s3] state changed: PREPARED -> START
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s1, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-i1, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s3, START], param depend expect=1, actual=0
TRACE [pool-2-thread-3] [c.d.d.Dag] Node[node-s1] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=0
TRACE [pool-2-thread-2] [c.d.d.Dag] Node[node-i1] state changed: WAITING -> RUNNING
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-s3] state changed: START -> WAITING
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.s.StrategyBean] LogicStrategy() execute: params=[你好，这是一条由RootStrategy生成的测试语句]
DEBUG [pool-2-thread-2] [c.d.s.StrategyBean] LogicStrategy() execute: params=[你好，这是一条由RootStrategy生成的测试语句]
WARN  [pool-2-thread-3] [c.d.s.StrategyBean] LogicStrategy() do [你好，这是一条由RootStrategy生成的测试语句] err: java.lang.RuntimeException: mock error for debug
TRACE [pool-2-thread-3] [c.d.d.Dag] Node[node-s1] state changed: RUNNING -> FAILED
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Node executed done, begin delivering result[DagNodeExecuteResult(result=null, info=DagNodeInfo[8fce0232c3b24b768951df26351e3d79:node-s1,timeout=-1], trace=TraceInfo[waitingT=1638704310670,ineffectiveT=0,timeoutT=0,startT=1638704310669,runningT=1638704310672,failedT=1638704310673,preparedT=1638704310668,successT=0,createdT=1638704310645,state=FAILED,failedDepends=[]], throwable=java.lang.RuntimeException: mock error for debug)] to 2 children
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Delivering node[node-s1] failure to child DagNode[node-s2, WAITING]
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Delivering node[node-s1] failure to child DagNode[node-s3, WAITING]
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s3, WAITING], param depend expect=1, actual=0
TRACE [pool-2-thread-3] [c.d.d.Dag] Node[node-i2] state changed: PREPARED -> START
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-i2, START], param depend expect=1, actual=0
TRACE [pool-2-thread-5] [c.d.d.Dag] Node[node-s2] state changed: WAITING -> INEFFECTIVE
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-s3] state changed: WAITING -> INEFFECTIVE
TRACE [pool-2-thread-3] [c.d.d.Dag] Node[node-i2] state changed: START -> WAITING
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Node executed done, begin delivering result[DagNodeExecuteResult(result=null, info=DagNodeInfo[8fce0232c3b24b768951df26351e3d79:node-s3,timeout=-1], trace=TraceInfo[waitingT=1638704310672,ineffectiveT=1638704310674,timeoutT=0,startT=1638704310672,runningT=0,failedT=0,preparedT=1638704310668,successT=0,createdT=1638704310646,state=INEFFECTIVE,failedDepends=[node-s1]], throwable=java.lang.IllegalStateException: node-s3 node ineffective)] to 1 children
DEBUG [pool-2-thread-5] [c.d.d.DagScheduler] Node executed done, begin delivering result[DagNodeExecuteResult(result=null, info=DagNodeInfo[8fce0232c3b24b768951df26351e3d79:node-s2,timeout=-1], trace=TraceInfo[waitingT=1638704310670,ineffectiveT=1638704310674,timeoutT=0,startT=1638704310670,runningT=0,failedT=0,preparedT=1638704310668,successT=0,createdT=1638704310646,state=INEFFECTIVE,failedDepends=[node-s1]], throwable=java.lang.IllegalStateException: node-s2 node ineffective)] to 1 children
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Delivering node[node-s3] failure to child DagNode[node-s5, PREPARED]
DEBUG [pool-2-thread-5] [c.d.d.DagScheduler] Delivering node[node-s2] failure to child DagNode[node-s6, PREPARED]
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-s5] state changed: PREPARED -> START
TRACE [pool-2-thread-5] [c.d.d.Dag] Node[node-s6] state changed: PREPARED -> START
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s5, START], param depend expect=2, actual=0
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s6, START], param depend expect=3, actual=0
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-s5] state changed: START -> WAITING
TRACE [pool-2-thread-5] [c.d.d.Dag] Node[node-s6] state changed: START -> WAITING
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=0
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s5, WAITING], param depend expect=2, actual=0
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-2] [c.d.s.StrategyBean] LogicStrategy() do [你好，这是一条由RootStrategy生成的测试语句] to: 35960.526956650676
TRACE [pool-2-thread-2] [c.d.d.Dag] Node[node-i1] state changed: RUNNING -> SUCCESS
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-2] [c.d.d.DagScheduler] Node executed done, begin delivering result[DagNodeExecuteResult(result=35960.526956650676, info=DagNodeInfo[8fce0232c3b24b768951df26351e3d79:node-i1,timeout=-1], trace=TraceInfo[waitingT=1638704310670,ineffectiveT=0,timeoutT=0,startT=1638704310669,runningT=1638704310672,failedT=0,preparedT=1638704310667,successT=1638704310676,createdT=1638704310647,state=SUCCESS,failedDepends=[]], throwable=null)] to 2 children
DEBUG [pool-2-thread-2] [c.d.d.DagScheduler] Delivering node[node-i1] result to child DagNode[node-s4, WAITING]
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-2] [c.d.d.DagScheduler] Delivering node[node-i1] result to child DagNode[node-i2, WAITING]
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=1
TRACE [pool-2-thread-2] [c.d.d.Dag] Node[node-final] state changed: PREPARED -> START
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=0
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s5, WAITING], param depend expect=2, actual=0
TRACE [pool-2-thread-4] [c.d.d.Dag] Node[node-s4] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, START], param depend expect=1, actual=0
DEBUG [pool-2-thread-4] [c.d.s.StrategyBean] LogicStrategy() execute: params=[35960.526956650676]
TRACE [pool-2-thread-2] [c.d.d.Dag] Node[node-final] state changed: START -> WAITING
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=1
TRACE [pool-2-thread-3] [c.d.d.Dag] Node[node-i2] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-4] [c.d.s.StrategyBean] LogicStrategy() do [35960.526956650676] to: 35960.526956650676+s4
DEBUG [pool-2-thread-3] [c.d.s.StrategyBean] LogicStrategy() execute: params=[35960.526956650676]
TRACE [pool-2-thread-4] [c.d.d.Dag] Node[node-s4] state changed: RUNNING -> SUCCESS
WARN  [pool-2-thread-3] [c.d.s.StrategyBean] LogicStrategy() do [35960.526956650676] err: java.lang.RuntimeException: mock error for debug
DEBUG [pool-2-thread-4] [c.d.d.DagScheduler] Node executed done, begin delivering result[DagNodeExecuteResult(result=35960.526956650676+s4, info=DagNodeInfo[8fce0232c3b24b768951df26351e3d79:node-s4,timeout=-1], trace=TraceInfo[waitingT=1638704310670,ineffectiveT=0,timeoutT=0,startT=1638704310669,runningT=1638704310677,failedT=0,preparedT=1638704310668,successT=1638704310678,createdT=1638704310646,state=SUCCESS,failedDepends=[]], throwable=null)] to 1 children
TRACE [pool-2-thread-3] [c.d.d.Dag] Node[node-i2] state changed: RUNNING -> FAILED
DEBUG [pool-2-thread-4] [c.d.d.DagScheduler] Delivering node[node-s4] result to child DagNode[node-s5, WAITING]
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-s5, WAITING], param depend expect=2, actual=1
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Node executed done, begin delivering result[DagNodeExecuteResult(result=null, info=DagNodeInfo[8fce0232c3b24b768951df26351e3d79:node-i2,timeout=-1], trace=TraceInfo[waitingT=1638704310674,ineffectiveT=0,timeoutT=0,startT=1638704310673,runningT=1638704310678,failedT=1638704310678,preparedT=1638704310668,successT=0,createdT=1638704310647,state=FAILED,failedDepends=[]], throwable=java.lang.RuntimeException: mock error for debug)] to 1 children
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Delivering node[node-i2] failure to child DagNode[node-s6, WAITING]
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s5, WAITING], param depend expect=2, actual=1
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=0
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, WAITING], param depend expect=1, actual=0
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-s5] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-1] [c.d.s.StrategyBean] LogicStrategy() execute: params=[35960.526956650676+s4]
DEBUG [pool-2-thread-1] [c.d.s.StrategyBean] LogicStrategy() do [35960.526956650676+s4] to: 35960.526956650676+s4+s5
TRACE [pool-2-thread-1] [c.d.d.Dag] Node[node-s5] state changed: RUNNING -> SUCCESS
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Node executed done, begin delivering result[DagNodeExecuteResult(result=35960.526956650676+s4+s5, info=DagNodeInfo[8fce0232c3b24b768951df26351e3d79:node-s5,timeout=-1], trace=TraceInfo[waitingT=1638704310675,ineffectiveT=0,timeoutT=0,startT=1638704310674,runningT=1638704310679,failedT=0,preparedT=1638704310669,successT=1638704310679,createdT=1638704310646,state=SUCCESS,failedDepends=[node-s3]], throwable=null)] to 1 children
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Delivering node[node-s5] result to child DagNode[node-s6, WAITING]
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=1
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=1
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, WAITING], param depend expect=1, actual=0
TRACE [pool-2-thread-5] [c.d.d.Dag] Node[node-s6] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-5] [c.d.s.StrategyBean] LogicStrategy() execute: params=[35960.526956650676+s4+s5]
DEBUG [pool-2-thread-5] [c.d.s.StrategyBean] LogicStrategy() do [35960.526956650676+s4+s5] to: 35960.526956650676+s4+s5+s6
TRACE [pool-2-thread-5] [c.d.d.Dag] Node[node-s6] state changed: RUNNING -> SUCCESS
DEBUG [pool-2-thread-5] [c.d.d.DagScheduler] Node executed done, begin delivering result[DagNodeExecuteResult(result=35960.526956650676+s4+s5+s6, info=DagNodeInfo[8fce0232c3b24b768951df26351e3d79:node-s6,timeout=-1], trace=TraceInfo[waitingT=1638704310675,ineffectiveT=0,timeoutT=0,startT=1638704310674,runningT=1638704310680,failedT=0,preparedT=1638704310670,successT=1638704310680,createdT=1638704310647,state=SUCCESS,failedDepends=[node-s2,node-i2]], throwable=null)] to 1 children
DEBUG [pool-2-thread-5] [c.d.d.DagScheduler] Delivering node[node-s6] result to child DagNode[node-final, WAITING]
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-final, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, WAITING], param depend expect=1, actual=1
TRACE [pool-2-thread-2] [c.d.d.Dag] Node[node-final] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-2] [c.d.s.StrategyBean] FinalStrategy[final:FINAL] execute: params=[35960.526956650676+s4+s5+s6]
DEBUG [pool-2-thread-2] [c.d.s.StrategyBean] FinalStrategy[final:FINAL] do [35960.526956650676+s4+s5+s6] to: 35960.526956650676+s4+s5+s6
TRACE [pool-2-thread-2] [c.d.d.Dag] Node[node-final] state changed: RUNNING -> SUCCESS
TRACE [main] [c.d.d.Dag] onDagCompleted Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=12]
INFO  [main] [c.d.d.DagScheduler] DagScheduler done, graph=Dag[graphId=8fce0232c3b24b768951df26351e3d79, nodeCount=10, edgeCount=12]
INFO  [main] [c.d.d.MainTest] ==========Dag HISTORY INFOS==========
graphId=8fce0232c3b24b768951df26351e3d79
nodes:
DagNode[node-root, SUCCESS] result: 你好，这是一条由RootStrategy生成的测试语句
DagNode[node-i1, SUCCESS] result: 35960.526956650676
DagNode[node-s1, FAILED] result: null
DagNode[node-s4, SUCCESS] result: 35960.526956650676+s4
DagNode[node-s2, INEFFECTIVE] result: null
DagNode[node-s3, INEFFECTIVE] result: null
DagNode[node-i2, FAILED] result: null
DagNode[node-s5, SUCCESS] result: 35960.526956650676+s4+s5
DagNode[node-s6, SUCCESS] result: 35960.526956650676+s4+s5+s6
DagNode[node-final, SUCCESS] result: 35960.526956650676+s4+s5+s6
traces:
DagNode[node-root, SUCCESS] trace: TraceInfo[waitingT=0,ineffectiveT=0,timeoutT=0,startT=1638704310668,runningT=1638704310669,failedT=0,preparedT=1638704310654,successT=1638704310670,createdT=1638704310643,state=SUCCESS,failedDepends=[]]
DagNode[node-i1, SUCCESS] trace: TraceInfo[waitingT=1638704310670,ineffectiveT=0,timeoutT=0,startT=1638704310669,runningT=1638704310672,failedT=0,preparedT=1638704310667,successT=1638704310676,createdT=1638704310647,state=SUCCESS,failedDepends=[]]
DagNode[node-s1, FAILED] trace: TraceInfo[waitingT=1638704310670,ineffectiveT=0,timeoutT=0,startT=1638704310669,runningT=1638704310672,failedT=1638704310673,preparedT=1638704310668,successT=0,createdT=1638704310645,state=FAILED,failedDepends=[]]
DagNode[node-s4, SUCCESS] trace: TraceInfo[waitingT=1638704310670,ineffectiveT=0,timeoutT=0,startT=1638704310669,runningT=1638704310677,failedT=0,preparedT=1638704310668,successT=1638704310678,createdT=1638704310646,state=SUCCESS,failedDepends=[]]
DagNode[node-s2, INEFFECTIVE] trace: TraceInfo[waitingT=1638704310670,ineffectiveT=1638704310674,timeoutT=0,startT=1638704310670,runningT=0,failedT=0,preparedT=1638704310668,successT=0,createdT=1638704310646,state=INEFFECTIVE,failedDepends=[node-s1]]
DagNode[node-s3, INEFFECTIVE] trace: TraceInfo[waitingT=1638704310672,ineffectiveT=1638704310674,timeoutT=0,startT=1638704310672,runningT=0,failedT=0,preparedT=1638704310668,successT=0,createdT=1638704310646,state=INEFFECTIVE,failedDepends=[node-s1]]
DagNode[node-i2, FAILED] trace: TraceInfo[waitingT=1638704310674,ineffectiveT=0,timeoutT=0,startT=1638704310673,runningT=1638704310678,failedT=1638704310678,preparedT=1638704310668,successT=0,createdT=1638704310647,state=FAILED,failedDepends=[]]
DagNode[node-s5, SUCCESS] trace: TraceInfo[waitingT=1638704310675,ineffectiveT=0,timeoutT=0,startT=1638704310674,runningT=1638704310679,failedT=0,preparedT=1638704310669,successT=1638704310679,createdT=1638704310646,state=SUCCESS,failedDepends=[node-s3]]
DagNode[node-s6, SUCCESS] trace: TraceInfo[waitingT=1638704310675,ineffectiveT=0,timeoutT=0,startT=1638704310674,runningT=1638704310680,failedT=0,preparedT=1638704310670,successT=1638704310680,createdT=1638704310647,state=SUCCESS,failedDepends=[node-s2,node-i2]]
DagNode[node-final, SUCCESS] trace: TraceInfo[waitingT=1638704310677,ineffectiveT=0,timeoutT=0,startT=1638704310677,runningT=1638704310681,failedT=0,preparedT=1638704310670,successT=1638704310681,createdT=1638704310644,state=SUCCESS,failedDepends=[]]
=====================================
Result:
35960.526956650676+s4+s5+s6
INFO  [main] [c.d.d.MainTest] ==========DAG GRAPH ADJACENCY MATRIX INFOS==========
nodes:
(0)node-i1, (1)node-s1, (2)node-s4, (3)node-final, (4)node-s2, (5)node-s6, (6)node-s3, (7)node-i2, (8)node-root, (9)node-s5
----------------------------------------------------
matrix:
(0): [0, 0, 1, 0, 0, 0, 0, 1, 0, 0]
(1): [0, 0, 0, 0, 1, 0, 1, 0, 0, 0]
(2): [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
(3): [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
(4): [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
(5): [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
(6): [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
(7): [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
(8): [1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
(9): [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]