INFO  [main] [c.d.d.DagScheduler] DagScheduler start, graph=Dag[graphId=5fe3275bbf5f4bec8f52dd997010fb65, nodeCount=10, edgeCount=12]
TRACE [main] [c.d.d.DagScheduler] Node[node-root] state changed: CREATED -> PREPARED
TRACE [main] [c.d.d.DagScheduler] Node[node-i1] state changed: CREATED -> PREPARED
TRACE [main] [c.d.d.DagScheduler] Node[node-s1] state changed: CREATED -> PREPARED
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-root, PREPARED] is start schedule
TRACE [pool-2-thread-1] [c.d.d.DagScheduler] Node[node-root] state changed: PREPARED -> START
TRACE [main] [c.d.d.DagScheduler] Node[node-i2] state changed: CREATED -> PREPARED
TRACE [main] [c.d.d.DagScheduler] Node[node-s2] state changed: CREATED -> PREPARED
TRACE [main] [c.d.d.DagScheduler] Node[node-s4] state changed: CREATED -> PREPARED
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s1, PREPARED] is start schedule
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-i1, PREPARED] is start schedule
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-root, START], param depend expect=0, actual=1
TRACE [main] [c.d.d.DagScheduler] Node[node-s3] state changed: CREATED -> PREPARED
TRACE [pool-2-thread-2] [c.d.d.DagScheduler] Node[node-i1] state changed: PREPARED -> START
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s1] state changed: PREPARED -> START
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s1, START], param depend expect=1, actual=0
TRACE [pool-2-thread-1] [c.d.d.DagScheduler] Node[node-root] state changed: START -> RUNNING
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-i1, START], param depend expect=1, actual=0
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s1] state changed: START -> WAITING
TRACE [pool-2-thread-2] [c.d.d.DagScheduler] Node[node-i1] state changed: START -> WAITING
TRACE [main] [c.d.d.DagScheduler] Node[node-s5] state changed: CREATED -> PREPARED
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-i2, PREPARED] is start schedule
TRACE [main] [c.d.d.DagScheduler] Node[node-s6] state changed: CREATED -> PREPARED
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, PREPARED] is start schedule
TRACE [pool-2-thread-4] [c.d.d.DagScheduler] Node[node-i2] state changed: PREPARED -> START
TRACE [main] [c.d.d.DagScheduler] Node[node-final] state changed: CREATED -> PREPARED
TRACE [pool-2-thread-5] [c.d.d.DagScheduler] Node[node-s2] state changed: PREPARED -> START
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-i2, START], param depend expect=1, actual=0
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, START], param depend expect=1, actual=0
TRACE [pool-2-thread-4] [c.d.d.DagScheduler] Node[node-i2] state changed: START -> WAITING
DEBUG [pool-2-thread-1] [c.d.s.StrategyBean] RootStrategy[root:ROOT] environment: params=[你好，这是一条由RootStrategy生成的测试语句]
TRACE [pool-2-thread-5] [c.d.d.DagScheduler] Node[node-s2] state changed: START -> WAITING
DEBUG [pool-2-thread-1] [c.d.s.StrategyBean] RootStrategy[root:ROOT] do [你好，这是一条由RootStrategy生成的测试语句] to: 你好，这是一条由RootStrategy生成的测试语句
TRACE [pool-2-thread-1] [c.d.d.DagScheduler] Node[node-root] state changed: RUNNING -> SUCCESS
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-i1, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s1, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Node executed done, begin delivering result[ExecuteResult(result=你好，这是一条由RootStrategy生成的测试语句, info=node-root:1638619298489-2121995675, trace=TraceInfo[startT=1638619298514,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298515,successT=1638619298516,waitingT=0,createdT=1638619298490,preparedT=1638619298499,state=SUCCESS,failedDepends=[]], throwable=null)] to 2 children
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Delivering node[node-root] result to child DagNode[node-i1, WAITING]
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-i1, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s1, WAITING], param depend expect=1, actual=0
TRACE [pool-2-thread-2] [c.d.d.DagScheduler] Node[node-i1] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-i1, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Delivering node[node-root] result to child DagNode[node-s1, WAITING]
DEBUG [pool-2-thread-2] [c.d.s.StrategyBean] DoubleStrategy[i1:LOGIC] environment: params=[你好，这是一条由RootStrategy生成的测试语句]
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s1, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s4, PREPARED] is start schedule
TRACE [pool-2-thread-1] [c.d.d.DagScheduler] Node[node-s4] state changed: PREPARED -> START
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s4, START], param depend expect=1, actual=0
TRACE [pool-2-thread-1] [c.d.d.DagScheduler] Node[node-s4] state changed: START -> WAITING
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s1, WAITING], param depend expect=1, actual=1
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s1] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.s.StrategyBean] StringStrategy[s1:LOGIC] environment: params=[你好，这是一条由RootStrategy生成的测试语句]
WARN  [pool-2-thread-3] [c.d.s.StrategyBean] StringStrategy[s1:LOGIC] do [你好，这是一条由RootStrategy生成的测试语句] to: null, err: java.lang.RuntimeException: mock error for debug
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s1] state changed: RUNNING -> FAILED
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Node executed done, begin delivering result[ExecuteResult(result=null, info=node-s1:1638619298491-913065088, trace=TraceInfo[startT=1638619298515,failedT=1638619298520,timeoutT=0,ineffectiveT=0,runningT=1638619298519,successT=0,waitingT=1638619298515,createdT=1638619298491,preparedT=1638619298513,state=FAILED,failedDepends=[]], throwable=java.lang.RuntimeException: mock error for debug)] to 2 children
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Delivering node[node-s1] failure to child DagNode[node-s2, WAITING]
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Delivering node[node-s1] failure to child DagNode[node-s3, PREPARED]
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s2, WAITING], param depend expect=1, actual=0
TRACE [pool-2-thread-5] [c.d.d.DagScheduler] Node[node-s2] state changed: WAITING -> INEFFECTIVE
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s3, PREPARED] is start schedule
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s3] state changed: PREPARED -> START
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s3, START], param depend expect=1, actual=0
DEBUG [pool-2-thread-5] [c.d.d.DagScheduler] Node executed done, begin delivering result[ExecuteResult(result=null, info=node-s2:1638619298491-746280996, trace=TraceInfo[startT=1638619298515,failedT=0,timeoutT=0,ineffectiveT=1638619298521,runningT=0,successT=0,waitingT=1638619298516,createdT=1638619298491,preparedT=1638619298514,state=INEFFECTIVE,failedDepends=[node-s1]], throwable=java.lang.IllegalStateException: node-s2 node ineffective)] to 1 children
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s3] state changed: START -> INEFFECTIVE
DEBUG [pool-2-thread-5] [c.d.d.DagScheduler] Delivering node[node-s2] failure to child DagNode[node-s6, PREPARED]
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s5, PREPARED] is start schedule
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Node executed done, begin delivering result[ExecuteResult(result=null, info=node-s3:1638619298491-50503805, trace=TraceInfo[startT=1638619298521,failedT=0,timeoutT=0,ineffectiveT=1638619298521,runningT=0,successT=0,waitingT=0,createdT=1638619298491,preparedT=1638619298514,state=INEFFECTIVE,failedDepends=[node-s1]], throwable=java.lang.IllegalStateException: node-s3 node ineffective)] to 1 children
TRACE [pool-2-thread-5] [c.d.d.DagScheduler] Node[node-s5] state changed: PREPARED -> START
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s5, START], param depend expect=2, actual=0
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Delivering node[node-s3] failure to child DagNode[node-s5, START]
TRACE [pool-2-thread-5] [c.d.d.DagScheduler] Node[node-s5] state changed: START -> WAITING
DEBUG [pool-2-thread-2] [c.d.s.StrategyBean] DoubleStrategy[i1:LOGIC] do [你好，这是一条由RootStrategy生成的测试语句] to: 35960.526956650676
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s6, PREPARED] is start schedule
TRACE [pool-2-thread-2] [c.d.d.DagScheduler] Node[node-i1] state changed: RUNNING -> SUCCESS
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s6] state changed: PREPARED -> START
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s6, START], param depend expect=3, actual=0
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s6] state changed: START -> WAITING
DEBUG [pool-2-thread-2] [c.d.d.DagScheduler] Node executed done, begin delivering result[ExecuteResult(result=35960.526956650676, info=node-i1:1638619298492-1555990397, trace=TraceInfo[startT=1638619298515,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298518,successT=1638619298522,waitingT=1638619298515,createdT=1638619298492,preparedT=1638619298513,state=SUCCESS,failedDepends=[]], throwable=null)] to 2 children
DEBUG [pool-2-thread-2] [c.d.d.DagScheduler] Delivering node[node-i1] result to child DagNode[node-i2, WAITING]
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-2] [c.d.d.DagScheduler] Delivering node[node-i1] result to child DagNode[node-s4, WAITING]
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s5, WAITING], param depend expect=2, actual=0
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, PREPARED] is start schedule
DEBUG [pool-2-thread-4] [c.d.d.DagNode] DagNode[node-i2, WAITING], param depend expect=1, actual=1
TRACE [pool-2-thread-2] [c.d.d.DagScheduler] Node[node-final] state changed: PREPARED -> START
TRACE [pool-2-thread-4] [c.d.d.DagScheduler] Node[node-i2] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, START], param depend expect=1, actual=0
DEBUG [pool-2-thread-4] [c.d.s.StrategyBean] DoubleStrategy[i2:LOGIC] environment: params=[35960.526956650676]
TRACE [pool-2-thread-2] [c.d.d.DagScheduler] Node[node-final] state changed: START -> WAITING
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=0
WARN  [pool-2-thread-4] [c.d.s.StrategyBean] DoubleStrategy[i2:LOGIC] do [35960.526956650676] to: null, err: java.lang.RuntimeException: mock error for debug
TRACE [pool-2-thread-4] [c.d.d.DagScheduler] Node[node-i2] state changed: RUNNING -> FAILED
DEBUG [pool-2-thread-4] [c.d.d.DagScheduler] Node executed done, begin delivering result[ExecuteResult(result=null, info=node-i2:1638619298492-1544078442, trace=TraceInfo[startT=1638619298515,failedT=1638619298524,timeoutT=0,ineffectiveT=0,runningT=1638619298523,successT=0,waitingT=1638619298516,createdT=1638619298492,preparedT=1638619298514,state=FAILED,failedDepends=[]], throwable=java.lang.RuntimeException: mock error for debug)] to 1 children
DEBUG [pool-2-thread-4] [c.d.d.DagScheduler] Delivering node[node-i2] failure to child DagNode[node-s6, WAITING]
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s4, WAITING], param depend expect=1, actual=1
TRACE [pool-2-thread-1] [c.d.d.DagScheduler] Node[node-s4] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s5, WAITING], param depend expect=2, actual=0
DEBUG [pool-2-thread-1] [c.d.s.StrategyBean] StringStrategy[s4:LOGIC] environment: params=[35960.526956650676]
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=0
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-1] [c.d.s.StrategyBean] StringStrategy[s4:LOGIC] do [35960.526956650676] to: 35960.526956650676+s4
TRACE [pool-2-thread-1] [c.d.d.DagScheduler] Node[node-s4] state changed: RUNNING -> SUCCESS
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Node executed done, begin delivering result[ExecuteResult(result=35960.526956650676+s4, info=node-s4:1638619298491-1557989809, trace=TraceInfo[startT=1638619298519,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298524,successT=1638619298525,waitingT=1638619298519,createdT=1638619298491,preparedT=1638619298514,state=SUCCESS,failedDepends=[]], throwable=null)] to 1 children
DEBUG [pool-2-thread-1] [c.d.d.DagScheduler] Delivering node[node-s4] result to child DagNode[node-s5, WAITING]
DEBUG [pool-2-thread-1] [c.d.d.DagNode] DagNode[node-s5, WAITING], param depend expect=2, actual=1
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s5, WAITING], param depend expect=2, actual=1
TRACE [pool-2-thread-5] [c.d.d.DagScheduler] Node[node-s5] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-5] [c.d.s.StrategyBean] StringStrategy[s5:LOGIC] environment: params=[35960.526956650676+s4]
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=0
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-5] [c.d.s.StrategyBean] StringStrategy[s5:LOGIC] do [35960.526956650676+s4] to: 35960.526956650676+s4+s5
TRACE [pool-2-thread-5] [c.d.d.DagScheduler] Node[node-s5] state changed: RUNNING -> SUCCESS
DEBUG [pool-2-thread-5] [c.d.d.DagScheduler] Node executed done, begin delivering result[ExecuteResult(result=35960.526956650676+s4+s5, info=node-s5:1638619298491-146874094, trace=TraceInfo[startT=1638619298522,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298526,successT=1638619298526,waitingT=1638619298522,createdT=1638619298491,preparedT=1638619298515,state=SUCCESS,failedDepends=[node-s3]], throwable=null)] to 1 children
DEBUG [pool-2-thread-5] [c.d.d.DagScheduler] Delivering node[node-s5] result to child DagNode[node-s6, WAITING]
DEBUG [pool-2-thread-5] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=1
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, WAITING], param depend expect=1, actual=0
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-s6, WAITING], param depend expect=3, actual=1
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s6] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-3] [c.d.s.StrategyBean] StringStrategy[s6:LOGIC] environment: params=[35960.526956650676+s4+s5]
DEBUG [pool-2-thread-3] [c.d.s.StrategyBean] StringStrategy[s6:LOGIC] do [35960.526956650676+s4+s5] to: 35960.526956650676+s4+s5+s6
TRACE [pool-2-thread-3] [c.d.d.DagScheduler] Node[node-s6] state changed: RUNNING -> SUCCESS
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Node executed done, begin delivering result[ExecuteResult(result=35960.526956650676+s4+s5+s6, info=node-s6:1638619298491-2123222442, trace=TraceInfo[startT=1638619298522,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298527,successT=1638619298528,waitingT=1638619298522,createdT=1638619298491,preparedT=1638619298515,state=SUCCESS,failedDepends=[node-s2,node-i2]], throwable=null)] to 1 children
DEBUG [pool-2-thread-3] [c.d.d.DagScheduler] Delivering node[node-s6] result to child DagNode[node-final, WAITING]
DEBUG [pool-2-thread-3] [c.d.d.DagNode] DagNode[node-final, WAITING], param depend expect=1, actual=1
DEBUG [pool-2-thread-2] [c.d.d.DagNode] DagNode[node-final, WAITING], param depend expect=1, actual=1
TRACE [pool-2-thread-2] [c.d.d.DagScheduler] Node[node-final] state changed: WAITING -> RUNNING
DEBUG [pool-2-thread-2] [c.d.s.StrategyBean] FinalStrategy[final:FINAL] environment: params=[35960.526956650676+s4+s5+s6]
DEBUG [pool-2-thread-2] [c.d.s.StrategyBean] FinalStrategy[final:FINAL] do [35960.526956650676+s4+s5+s6] to: 35960.526956650676+s4+s5+s6
TRACE [pool-2-thread-2] [c.d.d.DagScheduler] Node[node-final] state changed: RUNNING -> SUCCESS
INFO  [main] [c.d.d.DagScheduler] DagScheduler done, graph=Dag[graphId=5fe3275bbf5f4bec8f52dd997010fb65, nodeCount=10, edgeCount=12]
INFO  [main] [c.d.d.MainTest] ==========Dag HISTORY INFOS==========
graphId=5fe3275bbf5f4bec8f52dd997010fb65
nodes:
DagNode[node-root, SUCCESS] result: 你好，这是一条由RootStrategy生成的测试语句
DagNode[node-i1, SUCCESS] result: 35960.526956650676
DagNode[node-s1, FAILED] result: null
DagNode[node-i2, FAILED] result: null
DagNode[node-s2, INEFFECTIVE] result: null
DagNode[node-s4, SUCCESS] result: 35960.526956650676+s4
DagNode[node-s3, INEFFECTIVE] result: null
DagNode[node-s5, SUCCESS] result: 35960.526956650676+s4+s5
DagNode[node-s6, SUCCESS] result: 35960.526956650676+s4+s5+s6
DagNode[node-final, SUCCESS] result: 35960.526956650676+s4+s5+s6
traces:
DagNode[node-root, SUCCESS] trace: TraceInfo[startT=1638619298514,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298515,successT=1638619298516,waitingT=0,createdT=1638619298490,preparedT=1638619298499,state=SUCCESS,failedDepends=[]]
DagNode[node-i1, SUCCESS] trace: TraceInfo[startT=1638619298515,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298518,successT=1638619298522,waitingT=1638619298515,createdT=1638619298492,preparedT=1638619298513,state=SUCCESS,failedDepends=[]]
DagNode[node-s1, FAILED] trace: TraceInfo[startT=1638619298515,failedT=1638619298520,timeoutT=0,ineffectiveT=0,runningT=1638619298519,successT=0,waitingT=1638619298515,createdT=1638619298491,preparedT=1638619298513,state=FAILED,failedDepends=[]]
DagNode[node-i2, FAILED] trace: TraceInfo[startT=1638619298515,failedT=1638619298524,timeoutT=0,ineffectiveT=0,runningT=1638619298523,successT=0,waitingT=1638619298516,createdT=1638619298492,preparedT=1638619298514,state=FAILED,failedDepends=[]]
DagNode[node-s2, INEFFECTIVE] trace: TraceInfo[startT=1638619298515,failedT=0,timeoutT=0,ineffectiveT=1638619298521,runningT=0,successT=0,waitingT=1638619298516,createdT=1638619298491,preparedT=1638619298514,state=INEFFECTIVE,failedDepends=[node-s1]]
DagNode[node-s4, SUCCESS] trace: TraceInfo[startT=1638619298519,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298524,successT=1638619298525,waitingT=1638619298519,createdT=1638619298491,preparedT=1638619298514,state=SUCCESS,failedDepends=[]]
DagNode[node-s3, INEFFECTIVE] trace: TraceInfo[startT=1638619298521,failedT=0,timeoutT=0,ineffectiveT=1638619298521,runningT=0,successT=0,waitingT=0,createdT=1638619298491,preparedT=1638619298514,state=INEFFECTIVE,failedDepends=[node-s1]]
DagNode[node-s5, SUCCESS] trace: TraceInfo[startT=1638619298522,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298526,successT=1638619298526,waitingT=1638619298522,createdT=1638619298491,preparedT=1638619298515,state=SUCCESS,failedDepends=[node-s3]]
DagNode[node-s6, SUCCESS] trace: TraceInfo[startT=1638619298522,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298527,successT=1638619298528,waitingT=1638619298522,createdT=1638619298491,preparedT=1638619298515,state=SUCCESS,failedDepends=[node-s2,node-i2]]
DagNode[node-final, SUCCESS] trace: TraceInfo[startT=1638619298523,failedT=0,timeoutT=0,ineffectiveT=0,runningT=1638619298534,successT=1638619298535,waitingT=1638619298523,createdT=1638619298491,preparedT=1638619298515,state=SUCCESS,failedDepends=[]]
=====================================
Result:
35960.526956650676+s4+s5+s6
INFO  [main] [c.d.d.MainTest] ==========DAG GRAPH ADJACENCY MATRIX INFOS==========
nodes:
(0)node-i2, (1)node-root, (2)node-s2, (3)node-final, (4)node-s5, (5)node-s4, (6)node-i1, (7)node-s3, (8)node-s1, (9)node-s6
----------------------------------------------------
matrix:
(0): [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
(1): [0, 0, 0, 0, 0, 0, 1, 0, 1, 0]
(2): [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
(3): [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
(4): [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
(5): [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
(6): [1, 0, 0, 0, 0, 1, 0, 0, 0, 0]
(7): [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
(8): [0, 0, 1, 0, 0, 0, 0, 1, 0, 0]
(9): [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]